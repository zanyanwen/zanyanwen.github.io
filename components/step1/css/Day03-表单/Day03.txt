1、回顾
	1、a-锚点
		1、使用
			1、定义锚点
				1、<a name="锚点名称">
				2、<ANY id="标识/锚点">
			2、链接到锚点
				<a href="#锚点名称"></a>
				<a href="页面URL#锚点名称"></a>
	2、表格
		1、语法
			1、创建表格&属性
				<table></table>
				属性：
					1、width
					2、height
					3、border
					4、bgcolor
					5、cellpadding
					6、cellspacing
					7、align
			2、创建表行&属性
				<tr></tr>
				属性：
					1、align
					2、valign
						top/middle/bottom
					3、bgcolor
			3、创建单元格(列)&属性
				<td></td>
				属性：
					1、width
					2、height
					3、bgcolor
					4、align
					5、colspan
						跨列
					6、rowspan
						跨行
		2、额外的标记
			1、<caption></caption>
				表格标题
			2、<th></th>
				行标题/列标题
		3、表格的复杂应用
			1、行分组
				1、<thead></thead> 表头
				2、<tbody></tbody>表主体
				3、<tfoot></tfoot>表尾

				如果不给行进行分组的话，默认都在tbody中
			2、不规则表格
				每行的列数不统一化
				通过  td 的跨行/跨列 属性完成
				1、colspan
					跨列
					从指定位置处开始，横向向右合并掉几个单元格(包含自己),被合并掉的单元格，要删除
				2、rowspan
					跨行
					从指定位置处开始，纵向向下合并掉几个单元格(包含自己),被合并掉的单元格，要删除
			3、表格嵌套
				所有被嵌套的内容，要放在 td 中
	3、列表
		1、有序列表
			语法
				<ol></ol>
			属性
				1、type
					1,a,A,i,I
				2、start
					起始编号 
		2、无序列表(重点)
			语法
				<ul></ul>
				列表项：<li></li>
			属性
				type
					disc,circle,square,none

			列表可以嵌套
				被嵌套的内容要放在 <li></li> 中
		3、定义列表
			使用场合：图文并茂
			语法：
				<dl></dl>:定义 定义列表
				<dt></dt>:定义 列表中的一个术语或名词
				<dd></dd>:对术语或名词的解释
	4、结构标记
		1、作用
			主要用作布局，提升标记的语义性
		2、语法
			1、<header></header> --顶部
			2、<nav>/nav> --导航
			3、<section></section> --主体内容(小节)
			4、<article></article> --博客，微博，帖子 信息等 
			5、<aside></aside> --侧边栏
			6、<footer></footer> --底部
	5、表单
		1、作用
			用于显示、收集数据，并提交数据给服务器
		2、组成部分
			1、表单
				1、语法
					<form></form>
				2、属性
					1、action
						提交给服务器的处理程序的URL
						默认提交给 本页
					2、method
						提交方式
						1、get(默认值)
							场合：向服务器要数据的时候使用
							特点：
								1、显示提交
								2、大小限制-2KB
						2、post
							场合：让服务器处理数据(注册，登录)
							特点：
								1、隐式提交-在地址栏上不会显示提交信息，安全性较高
								2、无大小限制
					3、enctype
						作用：表单数据进行编码的方式
						取值:
							1、application/x-www-form-urlencoded
								允许将 普通字符，特殊字符，提交给服务器，但是 文件 无法提交
							2、multipart/form-data
								允许将 文件 提交给服务器
							3、text/plain
								只能提交普通字符
			2、表单控件
***********************************
1、表单 - 表单控件
	1、分类
		1、input 组元素
		2、textarea 元素
		3、select 和 option 选项框
		4、其他元素
	2、input 元素
		1、语法
			<input> 或 <input/>
		2、属性
			1、type(重点)
				根据不同的type属性值，可以创建各种类型的输入控件，比如：文本框，密码框，复选框，按钮 等... ...
			2、value
				控件的值即要提交给服务器的数据
			3、name
				控件的名称，服务器要用
				命名规范：匈牙利命名法
					控件的缩写+功能名称
			4、disabled
				该属性只要出现在标签中，表示的是 禁用 该控件
		3、input的具体控件
			1、文本框与密码框
				文本框：明文显示用户输入的数据
					<input type="text">
				密码框：密文显示用户输入的数据
					<input type="password">

				属性
					1、name 
						缩写：txt
						ex:
							1、创建一个文本框，表示 接受 用户名称(Username)
							<input type="text" name="txtUsername">
							2、创建一个密码框，表示 接受 用户密码(Userpwd)
							<input type="password" name="txtUserpwd">
					2、value
						1、表示控件的值
						2、表示控件的默认值
					3、maxlength
						限制输入的字符数
					4、readonly
						只读-只能看，不能改
						该属性只要出现在标记中，就是只读的意思，不需要给值

						readonly 与 disabled 的区别
						1、readonly 只能看，不能改，但是可以被提交
						2、disabled 只能看，不能改，但是不能提交给服务器
				注意：对于input来讲，如果不写 type 或者 type值写错的时候，默认都是文本框
			2、单选按钮和复选框
				单选按钮：type="radio"
				复选框：type="checkbox"
				属性：
					1、name
						定义名称
						radio缩写：rdo
						checkbox缩写：chk
						还可以对控件进行分组,一组单选按钮和复选框，名称必须相同

						对于单选按钮：一组中的单选按钮，最多只能有一个被选中
					2、checked
						设置默认被选中
			3、按钮
				1、提交按钮
					功能固定化，负责将表中中的表单控件提交给服务器
					<input type="submit">
				2、重置按钮
					功能固定化，负责将所有表单控件的值恢复为初始值
					<input type="reset">
				3、普通按钮
					无功能，执行客户端的脚本(JS)
					<input type="button">
				属性：
					1、name
						缩写：btn
					2、value
						按钮上的显示文本
			4、隐藏域 和 文件选择框
				1、隐藏域
					不希望被用户看见，但是要提交给服务器的信息 
					<input type="hidden">
					name ：txt+功能名称
					value ：值
				2、文件选择框
					上传文件所用
					<input type="file">
					name : txt+功能名称

					注意：
						1、上传文件时，method的值必须为 post
						2、上传文件时，enctype的值必须为 multipart/form-data
	3、textarea - 多行文本域
		作用：允许用户录入多行数据到表单控件中
		语法：<textarea></textarea>
		属性：
			1、name
				缩写：txt+功能名称
			2、readonly
				只读
			3、cols
				指定文本区域的列数, 变相设置当前元素宽度
			4、rows
				指定文本区域的行数，变相设置当前元素高度
	4、选项框
		1、分类
			1、下拉选项框
			2、滚动列表
		2、语法
			1 、<select></select> 创建选项框
				属性：
					1、name
						缩写：sel+功能名称
					2、size
						取值 大于1的话，则为滚动列表
						否则就是下拉选项框
					3、multiple
						设置多选,该属性出现在 <select>中，那么就允许多选(针对滚动列表)
			2、<option>显示文本</option> 选项
				属性：
					1、value
						选项的值
					2、selected
						预选中
						注意：如果不设置selected属性的话，那么选项框中的第一项会默认被选中。
	5、其他元素
		1、为控件分组
			<fieldset></fieldset> : 为控件分组
			<legend></legend> : 为分组指定一个标题
		2、<label> 元素
			功能：关联 文本 与表达元素的，点击文本时，如同点击表单元素一样

			语法：
				<label>文本</label>
				属性：
					for ：表示与该label相关联的表单控件元素的ID值
2、其他常用标记
	1、浮动框架
		1、作用
			可以在一个浏览器窗口中同时显示多个页面文档
		2、语法
			<iframe>内容</iframe>
			内容：当浏览器不支持<iframe>元素时，将显示该文本作为描述信息
		
			属性：
				1、src
					要引入页面的URL
				2、width
				3、height
				4、frameborder
					浮动框架的边框，如果不想要，可以设置为 0
		3、注意
			该标签，主要针对的是 静态页面的引入

			动态页面中 有专门 引入页面的方式
	2、摘要与细节
		1、作用
			允许用户对某些信息进行展开和收缩
		2、语法
			<details></details> 用于定义细节
			<summary></summary> 用于定义细节中的标题
	3、度量元素
		1、作用
			定义一个度量衡
		2、语法
			<meter>文本</meter>
			属性：
				1、min ：定义度量范围的最小值，默认为0
				2、max ：定义度量范围的最大值，默认为1，一般情况下，将max值设置为 100
				3、value ：度量值，显示在度量元素上的数值，默认为0
	4、时间元素
		1、作用
			用于关联时间的不同表现形式
		2、语法
			<time>文本</time>
			属性：
				datetime ：文本所对应的 日期时间，如果日期和时间同时设置的话，日期和时间之间用“T”分割
	5、高亮文本显示
		1、作用
			以突出背景颜色的方式显示文本
		2、语法
			<mark>文本</mark>
3、CSS - 基础
	1、问题
		1、页面中所有的文本都变成红色
			<body text="red">
		2、将页面中所有的div的文本变为 蓝色
		3、将页面中所有的div的文本变为 黄色

		HTML元素属性的弊端
			1、相同效果要使用不同属性-方式不统一
			2、可重用性和可维护性不高
	2、什么是CSS
		1、CSS(Cascading Style Sheets)
			层叠样式表或级联样式表
			简称：样式表

		2、作用
			以统一的方式定义元素的样式，并且有效的提升可重用性和可维护性

			在HTML文档中，定义元素的样式
			实现了将内容和表现 分离
	3、CSS与HTML之间的关系
		1、HTML主要用于构建网页的结构
		2、CSS主要用于构建网页的样式

		HTML是页面内容组成，CSS是页面的表现
	4、HTML属性与CSS样式使用原则
		W3C建议尽量使用CSS样式取代HTML属性
		ex:
			1、
				html:<font color="red">
				css: color:red
			2、
				html:<body bgcolor="red">
						 <table bgcolor="red">
				css: background-color:red
			3、无法取代
				html:<td colspan="3">
				colspan 是无法被取代，只能使用html属性
	5、使用CSS样式表(重点)
		1、使用CSS样式表方式
			1、内联方式
				将 css 样式定义在元素的style属性中
				语法：<ANY style="若干样式声明"></ANY>
				样式声明：属性名:值;
				<ANY style="属性名:值;属性名:值"></ANY>

				常用的属性及其值：
				1、属性 : color
					作用：控制当前元素的文本颜色
					取值：英文表示法，ex:red,blue,green, ......

					color:red; : 文本颜色为红色
					<div style="color:red;">这是一段div</div>
				2、属性 ：font-size
					作用：控制当前元素的文字大小
					取值：以px 或 pt 为单位的数值
					
					文本红色外，文字大小为48px
					<div style="color:red;font-size:48px;">这是一段div</div>
				3、属性 ：background-color
					作用：控制当前元素的背景颜色
					取值：同color

					文本红色外，文字大小为48px外，背景颜色为绿色
					<div style="color:red;font-size:48px;background-color:green;">这是一段div</div>
			2、内部样式表
				1、语法
					将样式规则 声明在<style>元素中
					<style>元素，声明在 <head>元素中

					样式规则：一条完整的样式声明(一个完整的样式效果)
					在 <style>中，允许出现多条样式规则

					样式规则的组成：
						1、选择器 ：规范了页面中，哪些元素能够使用声明好的样式
						2、若干样式声明 

						选择器{
							属性:值; (样式声明)
							属性:值; (样式声明)
						}

						选择器{属性:值;属性:值;}

						元素选择器:由元素名称，作为选择器
						div{
							color:red;
							font-size:24px;
						}

						以上代码：控制页面上所有的div元素，文本颜色为 red 色，文字大小为 24px

						控制页面上所有的p元素，背景颜色为黄色
						p{
							background-color:yellow;
						}
			3、外部样式表
				1、作用
					将 样式规则 声明在 独立的 .css 文件中，在页面 引入 .css 文件
				2、使用步骤
					1、创建一个样式表文件(*.css为结尾的文本文件)
						该文件中只能包含样式规则(选择器和样式声明)
					2、在需要使用样式表文件的页面上，通过<link/>链接到外部样式表上
						<link rel="stylesheet" href="样式表文件的URL">


每日一练：
	1、使用CSS样式完成页面效果
		1、使用 内联样式 定义 p 元素的样式效果
			文本颜色：红色(red)
			字体大小：18pt
		2、使用内部样式表为 h1 元素定义样式
			文字大小：14px
			文字颜色：蓝色(blue)
		3、使用外部样式表为 h2 元素定义样式
			文字颜色：绿色(green)
			背景颜色：灰色(gray)
	2、如图所示




01-input.html?txtUsername=sanfeng.zhang&txtUserpwd=yinsusu&rdoGender=%E7%94%B7&chkHobby=eat&chkHobby=drink&chkHobby=play&chkHobby=happy

01-input%E5%85%83%E7%B4%A0.html?txtUsername=fdsa&txtUserpwd=1234565&rdoGender=%E5%A5%B3&chkHobby=eat&txtID=sanfeng.zhang%40163.com


02-复杂表单.html?txtName=mary&rdoGender=0&selEdu=1&selCity=0&txtIntro=Hello

02-复杂表单.html?txtName=mary&rdoGender=0&selEdu=2&selCity=1&txtIntro=Hello&chkPublic=on



